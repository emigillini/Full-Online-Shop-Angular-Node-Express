"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const admin_1 = require("../middlewares/admin");
const conversation_controller_1 = require("../controllers/conversation.controller");
const conversationValidators_1 = require("../validators/conversationValidators");
const validationErrorHandler_1 = require("../middlewares/validationErrorHandler");
const passport_1 = __importDefault(require("passport"));
const conversationRoutes = (0, express_1.Router)();
const conversationCont = new conversation_controller_1.ConversationController();
conversationRoutes.post("/", passport_1.default.authenticate("jwt", { session: false }), conversationValidators_1.createConversationValidators, validationErrorHandler_1.validationErrorHandler, conversationCont.createConversation);
conversationRoutes.get("/user", passport_1.default.authenticate("jwt", { session: false }), validationErrorHandler_1.validationErrorHandler, conversationCont.getUserConversations);
conversationRoutes.get("/all", passport_1.default.authenticate("jwt", { session: false }), conversationCont.getAllConversations);
conversationRoutes.get("/:id", passport_1.default.authenticate("jwt", { session: false }), conversationValidators_1.conversationIdValidator, validationErrorHandler_1.validationErrorHandler, conversationCont.getById);
conversationRoutes.delete("/:id", passport_1.default.authenticate("jwt", { session: false }), conversationValidators_1.conversationIdValidator, validationErrorHandler_1.validationErrorHandler, conversationCont.deleteConversation);
conversationRoutes.post("/:id/close", passport_1.default.authenticate("jwt", { session: false }), admin_1.adminOnly, conversationValidators_1.conversationIdValidator, validationErrorHandler_1.validationErrorHandler, conversationCont.closeConversation);
exports.default = conversationRoutes;
